[project]
name = "broken-links-finder"
version = "1.0.0"
description = "A powerful Python script that crawls web pages to find broken links with intelligent resume capability and comprehensive reporting"
readme = "README.md"
license = {file = "LICENSE"}
authors = [
    {name = "herclogon", email = "herclogon@users.noreply.github.com"}
]
keywords = ["web-crawler", "broken-links", "website-monitoring", "seo", "link-checker"]
classifiers = [
    "Development Status :: 5 - Production/Stable",
    "Intended Audience :: Developers",
    "License :: OSI Approved :: MIT License",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.6",
    "Programming Language :: Python :: 3.7",
    "Programming Language :: Python :: 3.8",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Topic :: Internet :: WWW/HTTP",
    "Topic :: Software Development :: Quality Assurance",
    "Topic :: System :: Monitoring",
]
requires-python = ">=3.7"
dependencies = [
    "requests>=2.25.1",
    "beautifulsoup4>=4.9.3",
    "lxml>=4.6.3",
    "serpy>=0.3.1",
]

[project.optional-dependencies]
dev = [
    "pytest>=7.0.0",
    "pytest-mock>=3.10.0",
    "pytest-cov>=4.0.0",
    "responses>=0.23.0",
]

[project.urls]
Homepage = "https://github.com/herclogon/broken-links-finder"
Repository = "https://github.com/herclogon/broken-links-finder.git"
Issues = "https://github.com/herclogon/broken-links-finder/issues"

[project.scripts]
broken-links-finder = "broken_links_finder:main"

[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[tool.pytest.ini_options]
testpaths = ["test_broken_links_finder.py"]
python_files = ["test_*.py"]
python_functions = ["test_*"]
addopts = "--verbose --tb=short"

[tool.coverage.run]
source = ["broken_links_finder"]
omit = ["test_*.py"]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "raise AssertionError",
    "raise NotImplementedError",
]
